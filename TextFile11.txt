23.05.25
-Обобщённое программирование
-Парадигма программирования, заключающаяся в написании
алгоритмов, которые можно применять к различным типам данных,
не меняя описание алгоритма.
--Преобразование элементов коллекции
--Умные указатели

-Контейнеры для произвольного типа элементов

-Шаблоны функций и шаблоны классов
--Объявляются перед типом с ключевым словом template
--Это шаблон, на основе которого компилятор сгенерирует целое
семейство функций или классов

-Ограничения
--Тело функции должно быть в той же единице трансляции, что
и её объявление
--Код шаблонной функции доступен всем её пользователям
--Если внести изменени в шаблонную функцию, придётся перекомпилировать
все использующие её файлы

-Шаблонные операторы
--Например можно переопределить операторы << и >>, чтобы он мог работать
со стандартными потоками
--template<typename T> std::basic_ostream<T>& operator<<(std::basic_ostream<T>&, ...) {...};

-Параметры шаблона, не являющиеся типами
--Допускаются целые типы, перечислимые, bool, указатели на объект или функцию,
указатели на методы класса, nullptr_t, литеральные типы, числа с плавающей запятой (С++20)

-Специлизация шаблона - <> func(...) {...};